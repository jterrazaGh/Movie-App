{"version":3,"sources":["webpack://movies_app/./src/components/MoviesP/Movie.js","webpack://movies_app/./src/components/MoviesP/Movies.js","webpack://movies_app/./src/components/MoviesP/SearchMovie.js","webpack://movies_app/./src/components/MoviesP/index.js"],"names":["Movie","id","title","poster_path","release_date","length","substring","NoImage","Movies","movies","text","map","movie","propTypes","string","SearchMovie","validateQMovie","e","MoviesP","useContext","MoviesContext","doneFetch"],"mappings":"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","file":"src_components_MoviesP_index_js.bundle.js","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ButtonPrimary from \"./../Common/ButtonPrimary\";\r\nimport NoImage from \"./../../assets/NoImage.jpg\";\r\n\r\nconst Movie = ({ id, title, poster_path, release_date }) => (\r\n  <div>\r\n    <Paper className=\"defaultPaper\">\r\n      <h3>{title.length >24 ? `${title.substring(0, 22)}...`:title}</h3>\r\n      <ul>\r\n        <li>\r\n          <img src={ poster_path ? `https://image.tmdb.org/t/p/w185_and_h278_bestv2${poster_path}`: NoImage} alt=\"movie\" />\r\n          <br></br>\r\n          <strong>Date: </strong>\r\n          <span>{release_date}</span>\r\n        </li>\r\n        <li>\r\n          <ButtonPrimary type=\"movies\" to={`/MoviesDetails/Movie/${id}`} />\r\n        </li>\r\n      </ul>\r\n    </Paper>\r\n  </div>\r\n);\r\n\r\nexport default Movie;\r\n","import React, { Fragment } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Movie from \"./Movie\";\r\nimport Message from \"./../Common/Message\";\r\nimport propTypes from \"prop-types\";\r\n\r\n\r\nconst Movies = ({ movies, text }) => (\r\n  <Fragment>\r\n    <Message text={text} />\r\n    <div className=\"root\">\r\n      \r\n        {movies.map((movie) => {\r\n          const { id, title, poster_path, release_date } = movie;\r\n          return (\r\n            <Movie\r\n              key={id}\r\n              id={id}\r\n              title={title}\r\n              poster_path={poster_path}\r\n              release_date={release_date}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  </Fragment>\r\n);\r\n\r\nMovies.propTypes = {\r\n  movies: propTypes.object,\r\n  text: propTypes.string,\r\n};\r\nexport default Movies;","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst SearchMovie = ({ validateQMovie }) => (\r\n  <Paper className=\"paper defaultPaperSearch\">\r\n    <TextField\r\n      id=\"q_movie\"\r\n      label=\"Movie\"\r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n      onKeyPress={(e) => validateQMovie(e)}\r\n    />\r\n    <IconButton onClick={(e) => validateQMovie(e)}>\r\n      <SearchIcon />\r\n    </IconButton>\r\n  </Paper>\r\n);\r\n\r\nexport default SearchMovie;","import React, { Fragment, useContext } from 'react';\r\nimport { MoviesContext } from '../../contexts/MovieContext';\r\nimport SearchMovie from './SearchMovie';\r\nimport Movies from './Movies';\r\nimport ProgressBar from '../Common/ProgressBar';\r\nimport Message from '../Common/Message';\r\n\r\nconst MoviesP = () => {\r\n    const { validateQMovie, doneFetch, text, movies } = useContext(MoviesContext);\r\n\r\n    return (\r\n        <Fragment>\r\n            <SearchMovie validateQMovie={validateQMovie} />\r\n            {\r\n                doneFetch ?\r\n                    (movies.length ? <Movies text={text} movies={movies} /> : <Message text={text} />)\r\n                    :\r\n                    (<ProgressBar />)\r\n            }\r\n        </Fragment>\r\n\r\n\r\n    )\r\n};\r\n\r\nexport default MoviesP;\r\n"],"sourceRoot":""}