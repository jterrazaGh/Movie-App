{"version":3,"sources":["webpack://movies_app/./src/components/MoviesP/SearchMovie.js","webpack://movies_app/./src/components/MoviesP/Movie.js","webpack://movies_app/./src/components/MoviesP/Movies.js","webpack://movies_app/./src/components/MoviesP/index.js"],"names":["validateQMovie","Paper","className","TextField","id","label","margin","variant","onKeyPress","e","IconButton","onClick","Search","title","poster_path","release_date","length","substring","src","NoImage","alt","ButtonPrimary","type","to","Movies","movies","text","Fragment","Message","map","movie","key","propTypes","useContext","MoviesContext","doneFetch","ProgressBar"],"mappings":"0NAqBA,EAfoB,SAAC,GAAD,IAAGA,EAAH,EAAGA,eAAH,OAClB,gBAACC,EAAA,EAAD,CAAOC,UAAU,4BACf,gBAACC,EAAA,EAAD,CACEC,GAAG,UACHC,MAAM,QACNC,OAAO,SACPC,QAAQ,WACRC,WAAY,SAACC,GAAD,OAAOT,EAAeS,MAEpC,gBAACC,EAAA,EAAD,CAAYC,QAAS,SAACF,GAAD,OAAOT,EAAeS,KACzC,gBAACG,EAAA,EAAD,S,oBCSN,EAnBc,SAAC,GAAD,IAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,OACZ,2BACE,gBAACd,EAAA,EAAD,CAAOC,UAAU,gBACf,0BAAKW,EAAMG,OAAQ,GAAd,UAAsBH,EAAMI,UAAU,EAAG,IAAzC,OAAkDJ,GACvD,0BACE,0BACE,uBAAKK,IAAMJ,EAAc,kDAAH,OAAqDA,GAAeK,IAASC,IAAI,UACvG,2BACA,wCACA,4BAAOL,IAET,0BACE,gBAACM,EAAA,EAAD,CAAeC,KAAK,SAASC,GAAE,+BAA0BnB,U,6BCX7DoB,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,KAAX,OACb,gBAAC,EAAAC,SAAD,KACE,gBAACC,EAAA,EAAD,CAASF,KAAMA,IACf,uBAAKxB,UAAU,QAEVuB,EAAOI,KAAI,SAACC,GACX,IAAQ1B,EAAyC0B,EAAzC1B,GAAIS,EAAqCiB,EAArCjB,MAAOC,EAA8BgB,EAA9BhB,YAAaC,EAAiBe,EAAjBf,aAChC,OACE,gBAAC,EAAD,CACEgB,IAAK3B,EACLA,GAAIA,EACJS,MAAOA,EACPC,YAAaA,EACbC,aAAcA,UAQ5BS,EAAOQ,UAAY,CACjBP,OAAQO,WACRN,KAAMM,YAER,Q,SCPA,EAlBgB,WACZ,OAAoDC,gBAAWC,KAAvDlC,EAAR,EAAQA,eAAgBmC,EAAxB,EAAwBA,UAAWT,EAAnC,EAAmCA,KAAMD,EAAzC,EAAyCA,OAEzC,OACI,gBAAC,EAAAE,SAAD,KACI,gBAAC,EAAD,CAAa3B,eAAgBA,IAEzBmC,EACKV,EAAOT,OAAS,gBAAC,EAAD,CAAQU,KAAMA,EAAMD,OAAQA,IAAa,gBAACG,EAAA,EAAD,CAASF,KAAMA,IAExE,gBAACU,EAAA,EAAD","file":"203.bundle.js","sourcesContent":["import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst SearchMovie = ({ validateQMovie }) => (\r\n  <Paper className=\"paper defaultPaperSearch\">\r\n    <TextField\r\n      id=\"q_movie\"\r\n      label=\"Movie\"\r\n      margin=\"normal\"\r\n      variant=\"outlined\"\r\n      onKeyPress={(e) => validateQMovie(e)}\r\n    />\r\n    <IconButton onClick={(e) => validateQMovie(e)}>\r\n      <SearchIcon />\r\n    </IconButton>\r\n  </Paper>\r\n);\r\n\r\nexport default SearchMovie;","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ButtonPrimary from \"./../Common/ButtonPrimary\";\r\nimport NoImage from \"./../../assets/NoImage.jpg\";\r\n\r\nconst Movie = ({ id, title, poster_path, release_date }) => (\r\n  <div>\r\n    <Paper className=\"defaultPaper\">\r\n      <h3>{title.length >24 ? `${title.substring(0, 22)}...`:title}</h3>\r\n      <ul>\r\n        <li>\r\n          <img src={ poster_path ? `https://image.tmdb.org/t/p/w185_and_h278_bestv2${poster_path}`: NoImage} alt=\"movie\" />\r\n          <br></br>\r\n          <strong>Date: </strong>\r\n          <span>{release_date}</span>\r\n        </li>\r\n        <li>\r\n          <ButtonPrimary type=\"movies\" to={`/MoviesDetails/Movie/${id}`} />\r\n        </li>\r\n      </ul>\r\n    </Paper>\r\n  </div>\r\n);\r\n\r\nexport default Movie;\r\n","import React, { Fragment } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Movie from \"./Movie\";\r\nimport Message from \"./../Common/Message\";\r\nimport propTypes from \"prop-types\";\r\n\r\n\r\nconst Movies = ({ movies, text }) => (\r\n  <Fragment>\r\n    <Message text={text} />\r\n    <div className=\"root\">\r\n      \r\n        {movies.map((movie) => {\r\n          const { id, title, poster_path, release_date } = movie;\r\n          return (\r\n            <Movie\r\n              key={id}\r\n              id={id}\r\n              title={title}\r\n              poster_path={poster_path}\r\n              release_date={release_date}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  </Fragment>\r\n);\r\n\r\nMovies.propTypes = {\r\n  movies: propTypes.object,\r\n  text: propTypes.string,\r\n};\r\nexport default Movies;","import React, { Fragment, useContext } from 'react';\r\nimport { MoviesContext } from '../../contexts/MovieContext';\r\nimport SearchMovie from './SearchMovie';\r\nimport Movies from './Movies';\r\nimport ProgressBar from '../Common/ProgressBar';\r\nimport Message from '../Common/Message';\r\n\r\nconst MoviesP = () => {\r\n    const { validateQMovie, doneFetch, text, movies } = useContext(MoviesContext);\r\n\r\n    return (\r\n        <Fragment>\r\n            <SearchMovie validateQMovie={validateQMovie} />\r\n            {\r\n                doneFetch ?\r\n                    (movies.length ? <Movies text={text} movies={movies} /> : <Message text={text} />)\r\n                    :\r\n                    (<ProgressBar />)\r\n            }\r\n        </Fragment>\r\n\r\n\r\n    )\r\n};\r\n\r\nexport default MoviesP;\r\n"],"sourceRoot":""}